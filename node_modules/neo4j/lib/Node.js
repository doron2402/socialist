/*** Generated by streamline 0.10.1 (callbacks) - DO NOT EDIT ***/
var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename, false),__func=__rt.__func,__cb=__rt.__cb,__catch=__rt.__catch,__tryCatch=__rt.__tryCatch,__apply=__rt.__apply;
(function() {
  var Node, Path, PropertyContainer, Relationship, adjustError, status, util, __hasProp = {
  }.hasOwnProperty, __extends = function(child, parent) {
    for (var key in parent) {
      if (__hasProp.call(parent, key)) {
        child[key] = parent[key];
      };
    };
    function ctor() {
      this.constructor = child;
    };
    ctor.prototype = parent.prototype;
    child.prototype = new ctor();
    child.__super__ = parent.prototype;
    return child;
  };
  status = require("http-status");
  util = require("./util");
  adjustError = util.adjustError;
  PropertyContainer = require("./PropertyContainer");
  Relationship = require("./Relationship");
  Path = require("./Path");
  module.exports = Node = (function(_super) {
    var _this = this;
    __extends(Node, _super);
    function Node(db, data) {
      Node.__super__.constructor.call(this, db, data);
    };
    Node.prototype.toString = function() {
      if (this.exists) {
        return ("node @" + this.id);
      }
       else {
        return (("unsaved node (" + (JSON.stringify(this.data, null, 4))) + ")");
      }
      ;
    };
    Node.prototype.save = function Node_prototype_save__1(_) {
      var error, response, services, __this = this;
      var __frame = {
        name: "Node_prototype_save__1",
        line: 43
      };
      return __func(_, this, arguments, Node_prototype_save__1, 0, __frame, function __$Node_prototype_save__1() {
        return (function ___(__then) {
          (function ___(_) {
            __tryCatch(_, function __$Node_prototype_save__1() {
              return (function __$Node_prototype_save__1(__then) {
                if (__this.exists) {
                  return __this._request.put({
                    uri: (("" + __this.self) + "/properties"),
                    json: __this.data
                  }, __cb(_, __frame, 4, 16, function ___(__0, __1) {
                    response = __1;
                    if ((response.statusCode !== status.NO_CONTENT)) {
                      switch (response.statusCode) {
                      case status.BAD_REQUEST:
                        return _(new Error("Invalid data sent"));
                      case status.NOT_FOUND:
                        return _(new Error("Node not found"));
                        default:
                        return _(response);
                      };
                    }
                    ;
                    __then();
                  }, true));
                }
                 else {
                  return __this.db.getServices(__cb(_, __frame, 19, 27, function ___(__0, __2) {
                    services = __2;
                    return __this._request.post({
                      uri: services.node,
                      json: __this.data
                    }, __cb(_, __frame, 21, 16, function ___(__0, __3) {
                      response = __3;
                      if ((response.statusCode !== status.CREATED)) {
                        switch (response.statusCode) {
                        case status.BAD_REQUEST:
                          return _(new Error("Invalid data sent"));
                          default:
                          return _(response);
                        };
                      }
                      ;
                      __this._data = response.body;
                      __then();
                    }, true));
                  }, true));
                }
                ;
              })(function __$Node_prototype_save__1() {
                return _(null, __this);
              });
            });
          })(function ___(_error, __result) {
            __catch(function __$Node_prototype_save__1() {
              if (_error) {
                error = _error;
                return _(adjustError(error));
              }
               else {
                _(null, __result);
              }
              ;
            });
          });
        })(function ___() {
          __tryCatch(_, _);
        });
      });
    };
    Node.prototype["delete"] = function Node_prototype_delete__2(_, force) {
      var error, relationships, __this = this, __arguments = arguments;
      var __frame = {
        name: "Node_prototype_delete__2",
        line: 97
      };
      return __func(_, this, arguments, Node_prototype_delete__2, 0, __frame, function __$Node_prototype_delete__2() {
        if ((force == null)) {
          force = false;
        }
        ;
        if (!__this.exists) {
          return _(null);
        }
        ;
        return (function ___(__then) {
          (function ___(_) {
            __tryCatch(_, function __$Node_prototype_delete__2() {
              return (function __$Node_prototype_delete__2(__then) {
                if (force) {
                  return __this.all(null, __cb(_, __frame, 8, 16, function ___(__0, __2) {
                    relationships = __2;
                    return relationships.forEach_(__cb(_, __frame, 9, 16, __then, true), {
                      parallel: true
                    }, function __1(_, rel) {
                      var __frame = {
                        name: "__1",
                        line: 106
                      };
                      return __func(_, this, arguments, __1, 0, __frame, function __$__1() {
                        return rel["delete"](__cb(_, __frame, 1, 20, _, true));
                      });
                    });
                  }, true));
                }
                 else {
                  __then();
                }
                ;
              })(__then);
            });
          })(function ___(_error, __result) {
            __catch(function __$Node_prototype_delete__2() {
              if (_error) {
                error = _error;
                return _(adjustError(error));
              }
               else {
                _(null, __result);
              }
              ;
            });
          });
        })(function ___() {
          __tryCatch(_, function __$Node_prototype_delete__2() {
            return __apply(__cb(_, __frame, 16, 8, _, true), Node.__super__["delete"], __this, __arguments, 0);
          });
        });
      });
    };
    Node.prototype.index = function Node_prototype_index__3(index, key, value, _) {
      var error, response, services, __this = this;
      var __frame = {
        name: "Node_prototype_index__3",
        line: 123
      };
      return __func(_, this, arguments, Node_prototype_index__3, 3, __frame, function __$Node_prototype_index__3() {
        return (function ___(__then) {
          (function ___(_) {
            __tryCatch(_, function __$Node_prototype_index__3() {
              if (!__this.exists) {
                return _(new Error("Node must exist before indexing."));
              }
              ;
              return __this.db.getServices(__cb(_, __frame, 5, 23, function ___(__0, __1) {
                services = __1;
                return __this._request.post({
                  url: ((("" + services.node_index) + "/") + index),
                  json: {
                    key: key,
                    value: value,
                    uri: __this.self
                  }
                }, __cb(_, __frame, 7, 12, function ___(__0, __2) {
                  response = __2;
                  if ((response.statusCode !== status.CREATED)) {
                    return _(response);
                  }
                  ;
                  __then();
                }, true));
              }, true));
            });
          })(function ___(_error, __result) {
            __catch(function __$Node_prototype_index__3() {
              if (_error) {
                error = _error;
                return _(adjustError(error));
              }
               else {
                _(null, __result);
              }
              ;
            });
          });
        })(function ___() {
          __tryCatch(_, _);
        });
      });
    };
    Node.prototype.unindex = function Node_prototype_unindex__4(index, key, value, _) {
      var base, error, response, services, url, __this = this;
      var __frame = {
        name: "Node_prototype_unindex__4",
        line: 157
      };
      return __func(_, this, arguments, Node_prototype_unindex__4, 3, __frame, function __$Node_prototype_unindex__4() {
        return (function ___(__then) {
          (function ___(_) {
            __tryCatch(_, function __$Node_prototype_unindex__4() {
              if (!__this.exists) {
                return _(new Error("Node must exist before unindexing."));
              }
              ;
              return __this.db.getServices(__cb(_, __frame, 7, 23, function ___(__0, __1) {
                services = __1;
                if (key) {
                  key = encodeURIComponent(key);
                }
                ;
                if (value) {
                  value = encodeURIComponent(value);
                }
                ;
                base = ((("" + services.node_index) + "/") + (encodeURIComponent(index)));
                url = ((key && value) ? ((((((("" + base) + "/") + key) + "/") + value) + "/") + __this.id) : (key ? ((((("" + base) + "/") + key) + "/") + __this.id) : ((("" + base) + "/") + __this.id)));
                return __this._request.del(url, __cb(_, __frame, 20, 12, function ___(__0, __2) {
                  response = __2;
                  if ((response.statusCode !== status.NO_CONTENT)) {
                    return _(response);
                  }
                  ;
                  __then();
                }, true));
              }, true));
            });
          })(function ___(_error, __result) {
            __catch(function __$Node_prototype_unindex__4() {
              if (_error) {
                error = _error;
                return _(adjustError(error));
              }
               else {
                _(null, __result);
              }
              ;
            });
          });
        })(function ___() {
          __tryCatch(_, _);
        });
      });
    };
    (function(actual) {
      return Node.prototype.unindex = function(index, key, value, callback) {
        if ((typeof key === "function")) {
          callback = key;
          key = null;
          value = null;
        }
         else if ((typeof value === "function")) {
          callback = value;
          value = null;
        }
        
        ;
        return actual.call(this, index, key, value, callback);
      };
    })(Node.prototype.unindex);
    Node.prototype.createRelationshipTo = function(otherNode, type, data, cb) {
      if ((typeof data === "function")) {
        cb = data;
        data = null;
      }
      ;
      return this._createRelationship(this, otherNode, type, data, cb);
    };
    Node.prototype.createRelationshipFrom = function(otherNode, type, data, cb) {
      if ((typeof data === "function")) {
        cb = data;
        data = null;
      }
      ;
      return this._createRelationship(otherNode, this, type, data, cb);
    };
    Node.prototype._createRelationship = function Node_prototype__createRelationship__5(from, to, type, data, _) {
      var createRelationshipURL, error, exception, message, otherNodeURL, response, _ref, __this = this;
      var __frame = {
        name: "Node_prototype__createRelationship__5",
        line: 250
      };
      return __func(_, this, arguments, Node_prototype__createRelationship__5, 4, __frame, function __$Node_prototype__createRelationship__5() {
        if ((data == null)) {
          data = {
          };
        }
        ;
        return (function ___(__then) {
          (function ___(_) {
            __tryCatch(_, function __$Node_prototype__createRelationship__5() {
              createRelationshipURL = from._data["create_relationship"];
              otherNodeURL = to.self;
              return (function __$Node_prototype__createRelationship__5(__then) {
                if ((((createRelationshipURL != null)) && otherNodeURL)) {
                  return __this._request.post({
                    url: createRelationshipURL,
                    json: {
                      to: otherNodeURL,
                      data: data,
                      type: type
                    }
                  }, __cb(_, __frame, 11, 16, function ___(__0, __3) {
                    response = __3;
                    return (function __$Node_prototype__createRelationship__5(__then) {
                      if ((response.statusCode !== status.CREATED)) {
                        _ref = (response.body || {
                        }), message = _ref.message, exception = _ref.exception;
                        return (function __$Node_prototype__createRelationship__5(_) {
                          var __2 = message;
                          if (__2) {
                            return _(null, __2);
                          }
                          ;
                          return (function __$Node_prototype__createRelationship__5(_) {
                            var __3 = exception;
                            if (__3) {
                              return _(null, __3);
                            }
                            ;
                            return (function __1(_) {
                              switch (response.statusCode) {
                              case status.BAD_REQUEST:
                                return _(null, ((((((("Invalid createRelationship: " + from.id) + " ") + type) + " ") + to.id) + " w/ data: ") + (JSON.stringify(data))));
                              case status.CONFLICT:
                                return _(null, "\"to\" node, or the node specified by the URI not found");
                                default:
                                return _(response);
                              };
                              _();
                            })(__cb(_, __frame, 21, 20, _, true));
                          })(__cb(_, __frame, -249, 0, function ___(__0, __5) {
                            var __4 = (message = __5);
                            return _(null, __4);
                          }, true));
                        })(__cb(_, __frame, -249, 0, function __$Node_prototype__createRelationship__5() {
                          return _(new Error(message));
                        }, true));
                      }
                       else {
                        __then();
                      }
                      ;
                    })(function __$Node_prototype__createRelationship__5() {
                      return _(null, new Relationship(__this.db, response.body, from, to));
                    });
                  }, true));
                }
                 else {
                  return _(new Error("Failed to create relationship"));
                }
                ;
              })(__then);
            });
          })(function ___(_error, __result) {
            __catch(function __$Node_prototype__createRelationship__5() {
              if (_error) {
                error = _error;
                return _(adjustError(error));
              }
               else {
                _(null, __result);
              }
              ;
            });
          });
        })(function ___() {
          __tryCatch(_, _);
        });
      });
    };
    Node.prototype._getRelationships = function Node_prototype__getRelationships__6(direction, type, _) {
      var error, prefix, relationshipsURL, resp, types, _this, __this = this;
      var __frame = {
        name: "Node_prototype__getRelationships__6",
        line: 308
      };
      return __func(_, this, arguments, Node_prototype__getRelationships__6, 2, __frame, function __$Node_prototype__getRelationships__6() {
        _this = __this;
        types = null;
        if ((type != null)) {
          types = ((type instanceof Array) ? type : [type,]);
        }
        ;
        return (function ___(__then) {
          (function ___(_) {
            __tryCatch(_, function __$Node_prototype__getRelationships__6() {
              if ((types != null)) {
                prefix = __this._data[(("" + direction) + "_typed_relationships")];
                relationshipsURL = ((prefix != null) ? prefix.replace("{-list|&|types}", types.join("&")) : void 0);
              }
               else {
                relationshipsURL = __this._data[(("" + direction) + "_relationships")];
              }
              ;
              if (!relationshipsURL) {
                return _(new Error("Couldn't find URL of relationships endpoint."));
              }
              ;
              return __this._request.get(relationshipsURL, __cb(_, __frame, 25, 12, function ___(__0, __1) {
                resp = __1;
                if ((resp.statusCode === status.NOT_FOUND)) {
                  return _(new Error("Node not found."));
                }
                ;
                if ((resp.statusCode !== status.OK)) {
                  return _(new Error(("Unrecognized response code: " + resp.statusCode)));
                }
                ;
                return _(null, resp.body.map(function(data) {
                  if ((_this.self === data.start)) {
                    return new Relationship(_this.db, data, _this, null);
                  }
                   else {
                    return new Relationship(_this.db, data, null, _this);
                  }
                  ;
                }));
              }, true));
            });
          })(function ___(_error, __result) {
            __catch(function __$Node_prototype__getRelationships__6() {
              if (_error) {
                error = _error;
                return _(adjustError(error));
              }
               else {
                _(null, __result);
              }
              ;
            });
          });
        })(function ___() {
          __tryCatch(_, _);
        });
      });
    };
    Node.prototype.getRelationships = function Node_prototype_getRelationships__7(type, _) {
      var __this = this;
      var __frame = {
        name: "Node_prototype_getRelationships__7",
        line: 360
      };
      return __func(_, this, arguments, Node_prototype_getRelationships__7, 1, __frame, function __$Node_prototype_getRelationships__7() {
        return __this.all(type, __cb(_, __frame, 1, 8, _, true));
      });
    };
    Node.prototype.outgoing = function Node_prototype_outgoing__8(type, _) {
      var __this = this;
      var __frame = {
        name: "Node_prototype_outgoing__8",
        line: 371
      };
      return __func(_, this, arguments, Node_prototype_outgoing__8, 1, __frame, function __$Node_prototype_outgoing__8() {
        return __this._getRelationships("outgoing", type, __cb(_, __frame, 1, 8, _, true));
      });
    };
    Node.prototype.incoming = function Node_prototype_incoming__9(type, _) {
      var __this = this;
      var __frame = {
        name: "Node_prototype_incoming__9",
        line: 382
      };
      return __func(_, this, arguments, Node_prototype_incoming__9, 1, __frame, function __$Node_prototype_incoming__9() {
        return __this._getRelationships("incoming", type, __cb(_, __frame, 1, 8, _, true));
      });
    };
    Node.prototype.all = function Node_prototype_all__10(type, _) {
      var __this = this;
      var __frame = {
        name: "Node_prototype_all__10",
        line: 395
      };
      return __func(_, this, arguments, Node_prototype_all__10, 1, __frame, function __$Node_prototype_all__10() {
        return __this._getRelationships("all", type, __cb(_, __frame, 1, 8, _, true));
      });
    };
    Node.prototype.getRelationshipNodes = function Node_prototype_getRelationshipNodes__11(rels, _) {
      var error, resp, traverseURL, _ref, _ref1, _ref2, _this, __this = this;
      var __frame = {
        name: "Node_prototype_getRelationshipNodes__11",
        line: 414
      };
      return __func(_, this, arguments, Node_prototype_getRelationshipNodes__11, 1, __frame, function __$Node_prototype_getRelationshipNodes__11() {
        _this = __this;
        rels = ((rels instanceof Array) ? rels : [rels,]);
        return (function ___(__then) {
          (function ___(_) {
            __tryCatch(_, function __$Node_prototype_getRelationshipNodes__11() {
              traverseURL = (((_ref = __this._data["traverse"]) != null) ? _ref.replace("{returnType}", "node") : void 0);
              if (!traverseURL) {
                return _(new Error("Traverse not available."));
              }
              ;
              return __this._request.post({
                url: traverseURL,
                json: {
                  max_depth: 1,
                  relationships: rels.map(function(rel) {
                    if ((typeof rel === "string")) {
                      return {
                        type: rel
                      };
                    }
                     else {
                      return rel;
                    }
                    ;
                  })
                }
              }, __cb(_, __frame, 11, 12, function ___(__0, __1) {
                resp = __1;
                if ((resp.statusCode === 404)) {
                  return _(new Error((((((_ref1 = resp.body) != null) ? _ref1.message : void 0)) || "Node not found.")));
                }
                ;
                if ((resp.statusCode !== 200)) {
                  return _(new Error((((((_ref2 = resp.body) != null) ? _ref2.message : void 0)) || (("Unrecognized response code: " + resp.statusCode)))));
                }
                ;
                return _(null, resp.body.map(function(data) {
                  return new Node(_this.db, data);
                }));
              }, true));
            });
          })(function ___(_error, __result) {
            __catch(function __$Node_prototype_getRelationshipNodes__11() {
              if (_error) {
                error = _error;
                return _(adjustError(error));
              }
               else {
                _(null, __result);
              }
              ;
            });
          });
        })(function ___() {
          __tryCatch(_, _);
        });
      });
    };
    Node.prototype.path = function Node_prototype_path__12(to, type, direction, maxDepth, algorithm, _) {
      var data, end, error, length, nodes, pathURL, relationships, res, start, _this, __this = this;
      var __frame = {
        name: "Node_prototype_path__12",
        line: 463
      };
      return __func(_, this, arguments, Node_prototype_path__12, 5, __frame, function __$Node_prototype_path__12() {
        _this = __this;
        if ((maxDepth == null)) {
          maxDepth = 1;
        }
        ;
        if ((algorithm == null)) {
          algorithm = "shortestPath";
        }
        ;
        return (function ___(__then) {
          (function ___(_) {
            __tryCatch(_, function __$Node_prototype_path__12() {
              pathURL = (("" + __this.self) + "/path");
              data = {
                to: to.self,
                relationships: {
                  type: type,
                  direction: direction
                },
                max_depth: maxDepth,
                algorithm: algorithm
              };
              return __this._request.post({
                url: pathURL,
                json: data
              }, __cb(_, __frame, 11, 12, function ___(__0, __1) {
                res = __1;
                if ((res.statusCode === status.NOT_FOUND)) {
                  return _(null, null);
                }
                ;
                if ((res.statusCode !== status.OK)) {
                  return _(new Error(("Unrecognized response code: " + res.statusCode)));
                }
                ;
                data = res.body;
                start = new Node(__this, {
                  self: data.start
                });
                end = new Node(__this, {
                  self: data.end
                });
                length = data.length;
                nodes = data.nodes.map(function(url) {
                  return new Node(_this, {
                    self: url
                  });
                });
                relationships = data.relationships.map(function(url) {
                  return new Relationship(_this, {
                    self: url,
                    type: type
                  });
                });
                return _(null, new Path(start, end, length, nodes, relationships));
              }, true));
            });
          })(function ___(_error, __result) {
            __catch(function __$Node_prototype_path__12() {
              if (_error) {
                error = _error;
                return _(adjustError(error));
              }
               else {
                _(null, __result);
              }
              ;
            });
          });
        })(function ___() {
          __tryCatch(_, _);
        });
      });
    };
    return Node;
  }).call(this, PropertyContainer);
}).call(this);
//# sourceMappingURL=Node.map
